{"version":3,"sources":["images/card_cover_placholder1.jpg","images/card_cover_placholder2.jpg","images/iconFavourites.png","images/iconTutorial.png","images/iconWaiter.png","components/IconCard.jsx","components/FoodCard.jsx","pages/Favourites.jsx","layouts/CameraLayout.jsx","pages/Scanner.jsx","components/PincerHeader.jsx","components/PincerContent.jsx","layouts/MainLayout.jsx","pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","IconCard","props","className","src","icon","alt","title","text","FoodCard","fullwidth","gradient","cover","Favourites","backButtonEnabled","pageTitle","pageId","cover1","cover2","CameraLayout","displayContents","alert","onInit","window","QRScanner","scan","show","status","console","log","style","display","Scanner","PincerHeader","onClick","PincerContent","children","MainLayout","renderBackButton","modifier","pushPage","page","navigator","component","renderToolbar","default","material","color","contentStyle","padding","Home","iconTutorial","iconFavourites","iconWaiter","renderPage","route","React","createElement","App","animation","initialRoute","Boolean","location","hostname","match","startApp","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","cordova","addEventListener"],"mappings":"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","file":"static/js/main.4ad22a97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card_cover_placholder1.f9f6ca9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card_cover_placholder2.9bea418b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iconFavourites.d5d0664d.png\";","module.exports = __webpack_public_path__ + \"static/media/iconTutorial.6516489e.png\";","module.exports = __webpack_public_path__ + \"static/media/iconWaiter.0b7913a7.png\";","// React Imports\r\nimport React from 'react';\r\n\r\n// Onsen Imports\r\nimport { Card } from 'react-onsenui';\r\n\r\n// Import styles\r\nimport 'animate.css';\r\nimport './IconCard.css';\r\n\r\nconst IconCard = (props) => {\r\n    return (\r\n        <Card className=\"iconCard\">\r\n            <div className=\"iconContainer\">\r\n                <div className=\"inner animated bounceIn slower\">\r\n                    <img src={props.icon} alt=\"Icon card\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"textContainer\">\r\n                <h4><strong>{props.title}</strong></h4>\r\n                <p>{props.text}</p>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default IconCard;","// React imports\r\nimport React from 'react';\r\n\r\n// Onsen imports\r\nimport { Card } from 'react-onsenui';\r\n\r\n// Import styles\r\nimport './FoodCard.css';\r\n\r\n\r\nconst FoodCard = (props) => {\r\n    return (\r\n        <Card className={\"foodCard \" + (props.fullwidth ? 'fullwidth' : '')}>\r\n            <div className=\"imageContainer\">\r\n                {props.gradient ? <div className=\"gradientEffect\"></div> : ''}\r\n                <img src={props.cover} alt=\"FoodCard cover\"/>\r\n            </div>\r\n\r\n            <div className=\"titleContainer\">\r\n                <h3 className={props.fullwidth ? 'padded' : ''}>\r\n                    <strong>\r\n                        {props.title}\r\n                    </strong>\r\n                </h3>\r\n            </div>\r\n\r\n            <div className=\"textContainer\">\r\n                <p className={props.fullwidth ? 'padded' : ''}>\r\n                    {props.text}\r\n                </p>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FoodCard;","// React imports\r\nimport React from 'react';\r\n\r\n//Import images\r\nimport cover1 from '../images/card_cover_placholder1.jpg';\r\nimport cover2 from '../images/card_cover_placholder2.jpg';\r\n\r\n// Import layouts\r\nimport MainLayout from '../layouts/MainLayout';\r\n\r\n// Import components\r\nimport FoodCard from '../components/FoodCard';\r\n\r\n// Import styles\r\nimport './Favourites.css';\r\n\r\nconst Favourites = (props) => {\r\n\r\n    return (\r\n        <MainLayout\r\n            {...props}\r\n            backButtonEnabled={true}\r\n            pageTitle='Kedvencek'\r\n            pageId={2}>\r\n\r\n\r\n            <FoodCard\r\n                fullwidth\r\n                cover={cover1}\r\n                title=\"FoodCard komponens minta #1\"\r\n                text=\"A Lorem Ipsum egy egyszerû szövegrészlete, szövegutánzata a betûszedõ és nyomdaiparnak. A Lorem Ipsum az 1500-as évek óta standard szövegrészletként szolgált az iparban; mikor egy ismeretlen nyomdász összeállította a betûkészletét és egy példa-könyvet vagy szöveget nyomott papírra, ezt használta.\" />\r\n\r\n            <FoodCard\r\n                fullwidth\r\n                gradient\r\n                cover={cover2}\r\n                title=\"FoodCard komponens minta #2\"\r\n                text=\"A Lorem Ipsum egy egyszerû szövegrészlete, szövegutánzata a betûszedõ és nyomdaiparnak. A Lorem Ipsum az 1500-as évek óta standard szövegrészletként szolgált az iparban; mikor egy ismeretlen nyomdász összeállította a betûkészletét és egy példa-könyvet vagy szöveget nyomott papírra, ezt használta.\" />\r\n\r\n            <FoodCard\r\n                gradient\r\n                cover={cover1}\r\n                title=\"FoodCard komponens minta #3\"\r\n                text=\"A Lorem Ipsum egy egyszerû szövegrészlete, szövegutánzata a betûszedõ és nyomdaiparnak. A Lorem Ipsum az 1500-as évek óta standard szövegrészletként szolgált az iparban; mikor egy ismeretlen nyomdász összeállította a betûkészletét és egy példa-könyvet vagy szöveget nyomott papírra, ezt használta.\" />\r\n\r\n            <FoodCard\r\n                cover={cover2}\r\n                title=\"FoodCard komponens minta #4\"\r\n                text=\"A Lorem Ipsum egy egyszerû szövegrészlete, szövegutánzata a betûszedõ és nyomdaiparnak. A Lorem Ipsum az 1500-as évek óta standard szövegrészletként szolgált az iparban; mikor egy ismeretlen nyomdász összeállította a betûkészletét és egy példa-könyvet vagy szöveget nyomott papírra, ezt használta.\" />\r\n        </MainLayout>\r\n    );\r\n}\r\n\r\nexport default Favourites;\r\n","//React imports\r\nimport React from 'react';\r\n\r\n//Onsen imports\r\nimport { Page, Button } from 'react-onsenui';\r\n\r\n/**\r\n * CameraLayout\r\n * \r\n * Az applikáció a telefon kamerájának igénybevételekor használatos elrendezése.\r\n */\r\nconst CameraLayout = (props) => {\r\n\r\n    /**\r\n     * toggleQRScanner()\r\n     * \r\n     * QR kód beolvasó kamera mód megjelenítéséért és eltüntetéséért felel.\r\n     * ( cordova-plugin-qrscanner )\r\n     */\r\n    const toggleQRScanner = () => {\r\n        window.QRScanner.scan(displayContents);\r\n        window.QRScanner.show(function (status) {\r\n            console.log(status);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * displayContents() \r\n     *\r\n     * A beolvasott kĂłd tartalmát jelení­ti meg\r\n     * ( cordova-plugin-qrscanner )\r\n     */\r\n    const displayContents = () => {\r\n        alert(\"beolvasva\");\r\n    }\r\n\r\n\r\n    return (\r\n        <Page {...props} onInit={toggleQRScanner} style={{ display: 'none' }}>\r\n\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default CameraLayout;","//React imports\r\nimport React from 'react';\r\n\r\n//Onsen imports\r\nimport { Button } from 'react-onsenui';\r\n\r\n//Import layouts\r\nimport CameraLayout from '../layouts/CameraLayout';\r\n\r\nconst Scanner = (props) => {\r\n    return (\r\n        <CameraLayout>\r\n            <Button>asd</Button>\r\n        </CameraLayout>\r\n    );\r\n}\r\n\r\nexport default Scanner;","//React imports\r\nimport React from 'react';\r\n\r\n//Import styles\r\nimport './PincerHeader.css';\r\n\r\nconst PincerHeader = (props) => {\r\n    return (\r\n        <div className=\"pincerHeader\" onClick={props.onClick} >\r\n            <h1 className=\"appTitle\">PincérApp</h1>\r\n            <h2 className=\"pageTitle\">{props.pageTitle}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PincerHeader;","//React imports\r\nimport React from 'react';\r\n\r\n//Import styles\r\nimport './PincerContent.css';\r\n\r\nconst PincerContent = (props) => {\r\n    return (\r\n        <div className=\"pincerContent\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PincerContent;","//React imports\r\nimport React from 'react';\r\n\r\n//Onsen imports\r\nimport { Page, Toolbar, ToolbarButton, Icon, BackButton } from 'react-onsenui';\r\n\r\n//Import pages\r\n//import Home from '../pages/Home';\r\nimport Favourites from '../pages/Favourites';\r\nimport Scanner from '../pages/Scanner';\r\n\r\n//Import components\r\nimport PincerHeader from '../components/PincerHeader';\r\nimport PincerContent from '../components/PincerContent';\r\n\r\n/**\r\n * MainLayout\r\n * \r\n * Az applikáció elsődleges elrendezési formája.\r\n */\r\nconst MainLayout = (props) => {\r\n    const renderBackButton = props.backButtonEnabled ? <BackButton modifier={props.modifier}>Back</BackButton> : '';\r\n\r\n    /**\r\n     * pushPage()\r\n     * \r\n     * Navigál egy adott oldalra.\r\n     */\r\n    const pushPage = (props, page) => {\r\n        props.navigator.pushPage({ component: page });\r\n    }\r\n\r\n    /**\r\n     * openQRScanner()\r\n     * \r\n     * Navigál a QR kód olvasó oldalára\r\n     */\r\n    const openQRScanner = () => {\r\n        pushPage(props, Scanner);\r\n    }\r\n\r\n    return (\r\n        <Page renderToolbar={() =>\r\n            <Toolbar modifier={props.modifier}>\r\n\r\n                <div className=\"left\">\r\n                    {renderBackButton}\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <ToolbarButton onClick={() => { openQRScanner(); }}>\r\n                        <Icon\r\n                            icon={{\r\n                                default: 'ion-ios-qr-scanner',\r\n                                material: 'ion-md-qr-scanner'\r\n                            }}\r\n\r\n                            style={{\r\n                                color: 'white'\r\n                            }}\r\n                        />\r\n                    </ToolbarButton>\r\n\r\n                    <ToolbarButton onClick={() => props.pageId !== 2 ? pushPage(props, Favourites) : false}>\r\n                        <Icon\r\n                            icon={{\r\n                                default: 'ion-ios-heart',\r\n                                material: 'ion-md-heart'\r\n                            }}\r\n\r\n                            style={{\r\n                                color: 'white'\r\n                            }} />\r\n                    </ToolbarButton>\r\n\r\n                </div>\r\n            </Toolbar>} contentStyle={{ padding: 0 }}>\r\n\r\n            <PincerHeader pageTitle={props.pageTitle} />\r\n            <PincerContent>\r\n                {props.children}\r\n            </PincerContent>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default MainLayout;","//React imports\r\nimport React from 'react';\r\n\r\n//Import images\r\nimport iconFavourites from '../images/iconFavourites.png';\r\nimport iconTutorial from '../images/iconTutorial.png';\r\nimport iconWaiter from '../images/iconWaiter.png';\r\n\r\n//Import components\r\nimport IconCard from '../components/IconCard';\r\n\r\n//Import layouts\r\nimport MainLayout from '../layouts/MainLayout';\r\n\r\n//Import styles\r\nimport './Home.css';\r\n\r\nconst Home = (props) => {\r\n    const username = \"Attila\";\r\n    const pageTitle = \"Üdv, \" + username + \"!\";\r\n\r\n    return (\r\n        <MainLayout\r\n            {...props}\r\n            backButtonEnabled={false}\r\n            pageTitle={pageTitle}\r\n            pageId={1}>\r\n\r\n            <IconCard\r\n                icon={iconTutorial}\r\n                title=\"Alkalmazás használata\"\r\n                text=\"Használd a felső navgiációs sávot a funkciók és oldalak közötti váltáshoz. Felhasználói fiókodba érintsd meg a profilkép helyén lévő gombot.\" />\r\n\r\n            <IconCard\r\n                icon={iconFavourites}\r\n                title=\"Mentsd el kedvenceidet\"\r\n                text=\"Regisztrálj, és mentsd el kedvenc ételeid az alkalmazásba, hogy később gyorsabban és egyszerűbben rendelj.\" />\r\n\r\n            <IconCard\r\n                icon={iconWaiter}\r\n                title=\"Hívd a pincért!\"\r\n                text=\"A QR kód olvasó funkcióval másodpercek alatt hívhatod a pincért a választott ételeid megrendeléséhez\" />\r\n        </MainLayout>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","//React imports\r\nimport React from 'react';\r\n\r\n//Onsen imports\r\nimport { Navigator } from 'react-onsenui';\r\n\r\n//Import pages\r\nimport Home from './pages/Home'\r\n\r\n//Import styles\r\nimport './App.css';\r\n\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n\r\nconst renderPage = (route, navigator) => {\r\n\r\n  const props = route.props || {};\r\n  props.navigator = navigator;\r\n\r\n  return React.createElement(route.component, props);\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <Navigator animation=\"fade\" initialRoute={{ component: Home }} renderPage={renderPage} />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst startApp = () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n}\n\nif (window.cordova) {\n    document.addEventListener('deviceready', startApp, false);\n} else {\n    startApp();\n}\n\n"],"sourceRoot":""}